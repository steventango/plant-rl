services:
  zone1:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - plant-rl
    volumes:
      - .:/app:cached
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.ssh:/root/.ssh:cached
      - ~/.gitconfig:/root/.gitconfig:cached
      - ~/.config:/root/.config:cached
      - ~/.wakatime.cfg:/root/.wakatime.cfg:cached
      - ~/.cache:/root/.cache:cached
      - ~/.netrc:/root/.netrc:cached
      - /extra-storage:/data:cached
    restart: unless-stopped
    command: python src/main_real.py -e experiments/online/E8/P0/Spreadsheet1.json -i 0 --deploy
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu
  zone2:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - plant-rl
    volumes:
      - .:/app:cached
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.ssh:/root/.ssh:cached
      - ~/.gitconfig:/root/.gitconfig:cached
      - ~/.config:/root/.config:cached
      - ~/.wakatime.cfg:/root/.wakatime.cfg:cached
      - ~/.cache:/root/.cache:cached
      - ~/.netrc:/root/.netrc:cached
      - /extra-storage:/data:cached
    restart: unless-stopped
    command: python src/main_real.py -e experiments/online/E8/P1/Bernoulli2.json -i 0 --deploy
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu

  zone3:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - plant-rl
    volumes:
      - .:/app:cached
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.ssh:/root/.ssh:cached
      - ~/.gitconfig:/root/.gitconfig:cached
      - ~/.config:/root/.config:cached
      - ~/.wakatime.cfg:/root/.wakatime.cfg:cached
      - ~/.cache:/root/.cache:cached
      - ~/.netrc:/root/.netrc:cached
      - /extra-storage:/data:cached
    restart: unless-stopped
    command: python src/main_real.py -e experiments/online/E8/P1/Bernoulli3.json -i 0 --deploy
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu

  zone6:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - plant-rl
    volumes:
      - .:/app:cached
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.ssh:/root/.ssh:cached
      - ~/.gitconfig:/root/.gitconfig:cached
      - ~/.config:/root/.config:cached
      - ~/.wakatime.cfg:/root/.wakatime.cfg:cached
      - ~/.cache:/root/.cache:cached
      - ~/.netrc:/root/.netrc:cached
      - /extra-storage:/data:cached
    restart: unless-stopped
    command: python src/main_real.py -e experiments/online/E8/P0/Spreadsheet6.json -i 0 --deploy
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu

  zone8:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - plant-rl
    volumes:
      - .:/app:cached
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.ssh:/root/.ssh:cached
      - ~/.gitconfig:/root/.gitconfig:cached
      - ~/.config:/root/.config:cached
      - ~/.wakatime.cfg:/root/.wakatime.cfg:cached
      - ~/.cache:/root/.cache:cached
      - ~/.netrc:/root/.netrc:cached
      - /extra-storage:/data:cached
    restart: unless-stopped
    command: python src/main_real.py -e experiments/online/E8/P1/Bernoulli8.json -i 0 --deploy
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu

  zone9:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - plant-rl
    volumes:
      - .:/app:cached
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.ssh:/root/.ssh:cached
      - ~/.gitconfig:/root/.gitconfig:cached
      - ~/.config:/root/.config:cached
      - ~/.wakatime.cfg:/root/.wakatime.cfg:cached
      - ~/.cache:/root/.cache:cached
      - ~/.netrc:/root/.netrc:cached
      - /extra-storage:/data:cached
    restart: unless-stopped
    command: python src/main_real.py -e experiments/online/E8/P1/Bernoulli9.json -i 0 --deploy
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu

  grounding-dino:
    build:
      context: api/grounding_dino
      dockerfile: Dockerfile
    networks:
      - plant-rl
    privileged: true
    restart: unless-stopped
    volumes:
      - ./api/grounding_dino:/app
      - ~/.cache:/root/.cache:cached
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu

  segment-anything:
    build:
      context: api/segment_anything
      dockerfile: Dockerfile
    networks:
      - plant-rl
    privileged: true
    restart: unless-stopped
    volumes:
      - ./api/segment_anything:/app
      - ~/.cache:/root/.cache:cached
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu

  lightbar-monitor:
    build:
      context: ./lightbar_monitor
      dockerfile: Dockerfile
    networks:
      - plant-rl
    environment:
      # User must configure this with comma-separated URLs
      - LIGHTBAR_API_BASE_URLS=http://mitacs-zone1.ccis.ualberta.ca:8080,http://mitacs-zone2.ccis.ualberta.ca:8080,http://mitacs-zone3.ccis.ualberta.ca:8080,http://mitacs-zone6.ccis.ualberta.ca:8080,http://mitacs-zone8.ccis.ualberta.ca:8080,http://mitacs-zone9.ccis.ualberta.ca:8080
      # Optional: Override default light off payload (JSON string)
      # - LIGHT_OFF_PAYLOAD='{"array": [[0,0,0,0,0,0], [0,0,0,0,0,0]]}'
      # Optional: Override default W&B project name
      # - WANDB_PROJECT=my_lightbar_alerts
      # Optional: Override default W&B alert title
      # - WANDB_ALERT_TITLE=Custom Light Alert
    volumes:
      - ~/.netrc:/root/.netrc:ro
    restart: unless-stopped

networks:
  plant-rl:
    name: plant-rl
